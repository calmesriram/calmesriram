pragma solidity ^0.4.0;
contract ERC20_BANK_WALLET
{
    mapping (address => uint256)map;
    mapping(address =>mapping(address=> uint256))set;
    function Totalsupply(uint256 deposit)public
    {
        if(deposit >0)
        map[msg.sender] = deposit;
    }
    function Balanceof(address checkbal) public constant returns(string,uint256)
    {
        if(checkbal >0)
        return ("your Balance:",map[checkbal]);
        else
        return("check your id",0);
    }
    function Transfer(address to,uint256 value)public returns(uint256,uint256)
    {
        if(map[msg.sender]>value && value >0)
        map[msg.sender] -=value;
        map[to] +=value;
        return (map[msg.sender],map[to]);
    }
     function Approve(address spender,uint256 value)public 
    {
         set[msg.sender][spender] = value;
    }
    
    function Transferfrom(address from,address to,uint256 value) public 
    { 
        if(set[from][msg.sender]>value && value>0)
        map[to] += value;
        set[msg.sender][from] -= value;
        map[msg.sender] -= value;
    }
    
    function Allowance(address owner,address spender)public  returns(uint256)
    {
          return (set[owner][spender]);
    }
   

}


